USE master;

IF EXISTS (SELECT name FROM sys.databases WHERE name = N'QuanLyQuanCafe')
BEGIN
    ALTER DATABASE QuanLyQuanCafe SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE QuanLyQuanCafe;
END;

create database QuanLyQuanCafe;

use QuanLyQuanCafe;

create table TableFood
(
	id int identity primary key,
	name nvarchar(100) not null default N'bàn chưa có tên',
	status nvarchar(100) not null default N'Trống'
)
;

create table Account
(
	username nvarchar(100) primary key,
	displayname nvarchar(100) not null default N'Khang',
	[password] nvarchar(1000) default 0,
	type int not null default 0
)
;

create table FoodCategory
(
	id int identity primary key,
	name nvarchar(100) not null default N'chưa đặt tên'
)
;

create table Food 
(
	id int identity primary key,
	name nvarchar(100) not null default N'chưa đặt tên',
	idcategory int not null,
	price float not null default 0,
	foreign key (idcategory) references dbo.foodcategory(id)
)
;

create table Bill
(
	id int identity primary key,
	datecheckin date not null default getdate(),
	datecheckout date,
	idtable int not null,
	status int not null default 0,
	foreign key (idtable) references dbo.tablefood(id)
)
;

create table BillInfo
(
	id int identity primary key,
	idbill int not null,
	idfood int not null,
	count int not null default 0,
	foreign key (idbill) references dbo.bill(id),
	foreign key (idfood) references dbo.food(id)
)
;

insert into dbo.account(	username,	displayname,	password,	type)
						values (	N'Khangluu' ,	N'Khang' ,	N'1',	1)

insert into dbo.account(	username,	displayname,	password,	type)
						values (	N'staff' ,	N'staff' ,	N'1',	0);

create Proc usp_getaccountbyusername
@username nvarchar(100)
as
begin	
select * from dbo.account where username = @username
end;


exec dbo.usp_getaccountbyusername @username = N'Khangluu' --nvarchar (100)
select * from dbo.account where username = N'' OR 1=1--

CREATE PROC USP_Login
@username nvarchar (100), @password nvarchar (100)
AS
BEGIN
SELECT * FROM dbo. Account WHERE UserName = @username AND Password = @password
END
GO

DECLARE @i INT = 0
WHILE @i <= 10
BEGIN
INSERT dbo.TableFood (name) VALUES ( N'Bàn ' + CAST (@i AS nvarchar(100)))
SET @i = @i + 1
END

CREATE PROC USP_GetTableList
AS SELECT * FROM dbo.TableFood 
GO

update dbo.TableFood set status = N'Có người' Where id = 9

exec dbo. USP_GetTableList


-- thêm category
insert dbo.FoodCategory
		( name )
values	( N'Cafe Việt Nam' -- name - nvarchar(100)
		  )
insert dbo.FoodCategory
		( name )
values	( N'Cafe Quốc Tế' )
insert dbo.FoodCategory
		( name )
values	( N'Các loại trà' )
insert dbo.FoodCategory
		( name )
values	( N'Bánh ngọt' )
-- thêm food
insert dbo.Food
			( name, idcategory, price )
values		( N'Cafe Đen ( đá/nóng )', --name - nvarchar(100)
			  1, -- idCategory - int
			  15000)
insert dbo.Food
			( name, idcategory, price )
values		( N'Cafe Đen Sữa ( đá/nóng )', 1, 20000)
insert dbo.Food
			( name, idcategory, price )
values		( N'Bạc xỉu', 1, 23000)
insert dbo.Food
			( name, idcategory, price )
values		( N'Cà phê muối', 1, 25000)
insert dbo.Food
			( name, idcategory, price )
values		( N'Cà phê trứng', 1, 35000)
insert dbo.Food
			( name, idcategory, price )
values		( N'Espresso ( single/double )', 2, 30000)
insert dbo.Food
			( name, idcategory, price )
values		( N'Americano', 2, 35000)
insert dbo.Food
			( name, idcategory, price )
values		( N'Cappuccino', 2, 40000 )
insert dbo.Food
			( name, idcategory, price )
values		( N'Latte', 2, 40000 )
insert dbo.Food
			( name, idcategory, price )
values		( N'Caramel Macchiato', 2, 45000 )
insert dbo.Food
			( name, idcategory, price )
values		( N'Trà đào cam sả', 3, 30000 )
insert dbo.Food
			( name, idcategory, price )
values		( N'Trà chanh sả mật ong', 3, 28000 )
insert dbo.Food
			( name, idcategory, price )
values		( N'Trà sen vàng', 3, 30000 )
insert dbo.Food
			( name, idcategory, price )
values		( N'Trà vải hoa hồng', 3, 32000 )
insert dbo.Food
			( name, idcategory, price )
values		( N'Bánh tiramisu mini', 4, 32000 )
insert dbo.Food
			( name, idcategory, price )
values		( N'Bánh phô mai Nhật', 4, 40000 )

-- thêm bill
insert dbo.Bill
		( datecheckin ,
		  datecheckout ,
		  idtable ,
		  status
		)
values	( getdate() , --DateCheckIn - date
		  null , --DateCheckOut - date
		  1, --idTable - int
		  0 --status - int
		)
insert dbo.Bill
		( datecheckin ,
		  datecheckout ,
		  idtable ,
		  status
		)
values	( getdate() , --DateCheckIn - date
		  null , --DateCheckOut - date
		  2, --idTable - int
		  0 --status - int
		)
insert dbo.Bill
		( datecheckin ,
		  datecheckout ,
		  idtable ,
		  status
		)
values	( getdate() , --DateCheckIn - date
		  null , --DateCheckOut - date
		  3, --idTable - int
		  1 --status - int
		)
-- thêm bill info	
insert dbo.BillInfo
		( idbill, idfood, count )
values	( 1, -- idbill - int
		  1, -- idFood - int
		  2 -- count - int
		  )
insert dbo.BillInfo
		( idbill, idfood, count )
values	( 1, -- idbill - int
		  3, -- idFood - int
		  4 -- count - int
		  )
insert dbo.BillInfo
		( idbill, idfood, count )
values	( 1, -- idbill - int
		  3, -- idFood - int
		  1 -- count - int
		  )
insert dbo.BillInfo
		( idbill, idfood, count )
values	( 2, -- idbill - int
		  1, -- idFood - int
		  2 -- count - int
		  )
insert dbo.BillInfo
		( idbill, idfood, count )
values	( 2, -- idbill - int
		  2, -- idFood - int
		  2 -- count - int
		  )
insert dbo.BillInfo
		( idbill, idfood, count )
values	( 3, -- idbill - int
		  4, -- idFood - int
		  2 -- count - int
		  )
go

SELECT 
    f.name, 
    bi.count, 
    f.price, 
    f.price * bi.count AS totalPrice 
FROM dbo.BillInfo AS bi
JOIN dbo.Bill AS b ON bi.idbill = b.id
JOIN dbo.Food AS f ON bi.idfood = f.id
WHERE b.idtable = 3


select * from dbo.Bill
select * from dbo.BillInfo
select * from dbo.Food
select * from dbo.FoodCategory

